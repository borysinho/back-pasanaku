generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model estadojuego {
  id          Int     @id @default(autoincrement())
  estado      String? @db.VarChar(20)
  descripcion String? @db.VarChar(255)
}

model grupo {
  id            Int             @id @default(autoincrement())
  nombre        String          @db.VarChar(200)
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  updated_at    DateTime        @default(now()) @db.Timestamptz(6)
  juego_grupo   juego_grupo[]
  jugador_grupo jugador_grupo[]
}

model juego {
  id                   Int           @id @default(autoincrement())
  id_estadojuego       Int
  fecha_inicializacion DateTime      @db.Timestamp(6)
  created_at           DateTime      @default(now()) @db.Timestamptz(6)
  updated_at           DateTime      @default(now()) @db.Timestamptz(6)
  juego_grupo          juego_grupo[]
}

model juego_grupo {
  id         Int      @id @default(autoincrement())
  id_juego   Int
  id_grupo   Int
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  grupo      grupo    @relation(fields: [id_grupo], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_grupo")
  juego      juego    @relation(fields: [id_juego], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_juego")
  oferta     oferta[]
}

model jugador {
  id              Int               @id @default(autoincrement())
  nombre          String            @db.VarChar(200)
  email           String            @unique @db.VarChar(100)
  usuario         String            @unique @db.VarChar(20)
  password        String            @default("") @db.VarChar(20)
  fechaNac        DateTime          @default(now()) @db.Timestamptz(6)
  telefono        String            @default("") @db.VarChar(20)
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  updated_at      DateTime          @default(now()) @db.Timestamptz(6)
  jugador_grupo   jugador_grupo[]
  jugador_sancion jugador_sancion[]
}

model jugador_grupo {
  id         Int      @id @default(autoincrement())
  id_jugador Int
  id_grupo   Int
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  grupo      grupo    @relation(fields: [id_grupo], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_grupo")
  jugador    jugador  @relation(fields: [id_jugador], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_jugador")
}

model jugador_sancion {
  id            Int      @id @default(autoincrement())
  fecha_sancion DateTime @default(now()) @db.Timestamp(6)
  id_jugador    Int
  id_sancion    Int
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)
  jugador       jugador  @relation(fields: [id_jugador], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_jugador")
  sancion       sancion  @relation(fields: [id_sancion], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sancion")
}

model oferta {
  id             Int         @id @default(autoincrement())
  monto          Int
  id_juego_grupo Int
  created_at     DateTime    @default(now()) @db.Timestamptz(6)
  updated_at     DateTime    @default(now()) @db.Timestamptz(6)
  juego_grupo    juego_grupo @relation(fields: [id_juego_grupo], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_juego_grupo")
}

model sancion {
  id              Int               @id @default(autoincrement())
  nombre          String            @db.VarChar(30)
  detalle         String?           @db.VarChar(255)
  jugador_sancion jugador_sancion[]
}
